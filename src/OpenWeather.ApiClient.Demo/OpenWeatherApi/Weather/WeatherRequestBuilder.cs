// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using OpenWeather.ApiClient.Demo.Models;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace OpenWeather.ApiClient.Demo.Weather
{
    /// <summary>
    /// Builds and executes requests for operations under \weather
    /// </summary>
    public class WeatherRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="OpenWeather.ApiClient.Demo.Weather.WeatherRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WeatherRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/weather{?id*,lang*,lat*,lon*,mode*,q*,units*,zip*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="OpenWeather.ApiClient.Demo.Weather.WeatherRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WeatherRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/weather{?id*,lang*,lat*,lon*,mode*,q*,units*,zip*}", rawUrl)
        {
        }
        /// <summary>
        /// Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations.
        /// </summary>
        /// <returns>A <see cref="OpenWeather.ApiClient.Demo.Models.TwoZeroZero"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<OpenWeather.ApiClient.Demo.Models.TwoZeroZero?> GetAsync(Action<RequestConfiguration<OpenWeather.ApiClient.Demo.Weather.WeatherRequestBuilder.WeatherRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<OpenWeather.ApiClient.Demo.Models.TwoZeroZero> GetAsync(Action<RequestConfiguration<OpenWeather.ApiClient.Demo.Weather.WeatherRequestBuilder.WeatherRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<OpenWeather.ApiClient.Demo.Models.TwoZeroZero>(requestInfo, OpenWeather.ApiClient.Demo.Models.TwoZeroZero.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<OpenWeather.ApiClient.Demo.Weather.WeatherRequestBuilder.WeatherRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<OpenWeather.ApiClient.Demo.Weather.WeatherRequestBuilder.WeatherRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="OpenWeather.ApiClient.Demo.Weather.WeatherRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public OpenWeather.ApiClient.Demo.Weather.WeatherRequestBuilder WithUrl(string rawUrl)
        {
            return new OpenWeather.ApiClient.Demo.Weather.WeatherRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations.
        /// </summary>
        public class WeatherRequestBuilderGetQueryParameters 
        {
            /// <summary>**City ID**. *Example: `2172797`*. You can call by city ID. The API responds with the exact result. The List of city IDs can be downloaded [here](http://bulk.openweathermap.org/sample/). You can include multiple cities in this parameter &amp;mdash; just separate them by commas. The limit of locations is 20. *Note: A single ID counts as a one API call. So, if you have 3 city IDs, itâ€™s treated as 3 API calls.*</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("id")]
            public string? Id { get; set; }
#nullable restore
#else
            [QueryParameter("id")]
            public string Id { get; set; }
#endif
            /// <summary>**Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.</summary>
            [QueryParameter("lang")]
            public OpenWeather.ApiClient.Demo.Weather.GetLangQueryParameterType? Lang { get; set; }
            /// <summary>**Latitude**. *Example: 35*. The latitude coordinate of the location of your interest. Must use with `lon`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("lat")]
            public string? Lat { get; set; }
#nullable restore
#else
            [QueryParameter("lat")]
            public string Lat { get; set; }
#endif
            /// <summary>**Longitude**. *Example: 139*. Longitude coordinate of the location of your interest. Must use with `lat`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("lon")]
            public string? Lon { get; set; }
#nullable restore
#else
            [QueryParameter("lon")]
            public string Lon { get; set; }
#endif
            /// <summary>**Mode**. *Example: html*. Determines the format of the response. Possible values are `json`, `xml`, and `html`. If the mode parameter is empty, the format is `json` by default.</summary>
            [QueryParameter("mode")]
            public OpenWeather.ApiClient.Demo.Weather.GetModeQueryParameterType? Mode { get; set; }
            /// <summary>**City name**. *Example: London*. You can call by city name, or by city name and country code. The API responds with a list of results that match a searching word. For the query value, type the city name and optionally the country code divided by a comma; use ISO 3166 country codes.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("q")]
            public string? Q { get; set; }
#nullable restore
#else
            [QueryParameter("q")]
            public string Q { get; set; }
#endif
            /// <summary>**Units**. *Example: imperial*. Possible values: `standard`, `metric`, and `imperial`. When you do not use the `units` parameter, the format is `standard` by default.</summary>
            [QueryParameter("units")]
            public OpenWeather.ApiClient.Demo.Weather.GetUnitsQueryParameterType? Units { get; set; }
            /// <summary>**Zip code**. Search by zip code. *Example: 95050,us*. Please note that if the country is not specified, the search uses USA as a default.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("zip")]
            public string? Zip { get; set; }
#nullable restore
#else
            [QueryParameter("zip")]
            public string Zip { get; set; }
#endif
        }
    }
}
